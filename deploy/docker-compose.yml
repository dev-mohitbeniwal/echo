version: "3.8"
services:
  backend:
    build:
      context: ../api
      dockerfile: ../api/Dockerfile
      args:
        - BUILD_ENV=development
    ports:
      - "8080:8080"
    volumes:
      - ../api:/app
      - logvolume:/var/log/echo
    depends_on:
      - neo4j
      - redis
      - elasticsearch
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - REDIS_ADDR=redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - LOG_LEVEL=debug
    networks:
      - echo-network

  # frontend:
  #   build:
  #     context: ../client
  #     dockerfile: ../deploy/Dockerfile.front
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../client:/app
  #   networks:
  #     - echo-network

  neo4j:
    image: neo4j:4.4
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/secretpassword
    volumes:
      - neo4jdata:/data
    networks:
      - echo-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - echo-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - echo-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - echo-network

  loki:
    image: grafana/loki:latest
    user: "0"
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -config.expand-env=true
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./scrape-config.yaml:/etc/loki/scrape-config.yaml
      - loki-data:/loki
    environment:
      - LOKI_CONFIG_DIR=/etc/loki
    networks:
      - echo-network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - ../api:/app
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - echo-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - loki
    networks:
      - echo-network

networks:
  echo-network:
    driver: bridge

volumes:
  neo4jdata:
  redisdata:
  esdata:
  logvolume:
  grafana-storage:
  promtail_data:
  loki-data:
